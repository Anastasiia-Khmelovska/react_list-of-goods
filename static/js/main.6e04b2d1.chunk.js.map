{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleReverse","setState","handleSortByAlphabet","ALPABET","handleSortByLength","LENGTH","handleReset","this","goods","visibleGoods","console","log","getReorderedGoods","sort","firstGood","secondGood","localeCompare","length","reverse","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAkCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,cAAgB,WACd,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEK,qBAAuB,WACrB,EAAKD,SAAS,CAAEH,SAAUL,EAASU,WAbvC,EAgBEC,mBAAqB,WACnB,EAAKH,SAAS,CAAEH,SAAUL,EAASY,UAjBvC,EAoBEC,YAAc,WACZ,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QAvBzB,4CA2BE,WACE,MAAiCQ,KAAKX,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZW,EAnDH,SACLA,EADK,GAGJ,IADCV,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNY,EAAY,YAAOD,GAMzB,OAFAE,QAAQC,IAAIb,EAAUD,GAEfY,EAwCSG,CAAkBlB,EAAiB,CAAEI,WAAUD,eAiB7D,OAfAW,EAAMK,MAAK,SAACC,EAAWC,GACrB,OAAQjB,GACN,KAAKL,EAASU,QACZ,OAAOW,EAAUE,cAAcD,GACjC,KAAKtB,EAASY,OACZ,OAAOS,EAAUG,OAASF,EAAWE,OACvC,QACE,OAAO,MAITpB,GACFW,EAAMU,UAIN,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBACpB,CAAE,WAAYvB,IAAaL,EAASU,UACtCmB,QAASf,KAAKL,qBAJhB,iCASA,wBACEkB,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,WAAYvB,IAAaL,EAASY,SACtCiB,QAASf,KAAKH,mBAJhB,4BASA,wBACEgB,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,YAA2B,IAAfxB,IAChByB,QAASf,KAAKP,cAJhB,uBAQiB,IAAfH,GAAuBC,IAAaL,EAASM,OAE7C,wBACEqB,KAAK,SACLD,UAAU,4BACVG,QAASf,KAAKD,YAHhB,sBASJ,6BACGE,EAAMe,KAAI,SAACC,GAAD,OAAU,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,eAvFvD,GAAyBC,IAAMC,WCjD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6e04b2d1.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\ntype Props = {};\n\nexport class App extends React.Component<Props, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleReverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleSortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  handleSortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  handleReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n    goods.sort((firstGood, secondGood) => {\n      switch (sortType) {\n        case SortType.ALPABET:\n          return firstGood.localeCompare(secondGood);\n        case SortType.LENGTH:\n          return firstGood.length - secondGood.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      goods.reverse();\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button is-info',\n              { 'is-light': sortType !== SortType.ALPABET })}\n            onClick={this.handleSortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-success',\n              { 'is-light': sortType !== SortType.LENGTH })}\n            onClick={this.handleSortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-warning',\n              { 'is-light': isReversed === false })}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n          {(isReversed === true || sortType !== SortType.NONE)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n        <ul>\n          {goods.map((good) => <li data-cy=\"Good\" key={good}>{good}</li>)}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}